plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.rafaelmardom.movies_and_shows_api'
    compileSdk 33

    defaultConfig {
        applicationId "com.rafaelmardom.movies_and_shows_api"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    /*
    I saw this practice in some tutorials.
    I'll use it if it's seen as a good practice.
    */

    def retrofitLatestVersion=  '2.9.0'
    def gsonVersion= '2.10'

    def firebaseVersion = '31.0.2'

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //RetroFit
    implementation "com.squareup.retrofit2:retrofit:$retrofitLatestVersion"
    //Gson Serialization
    implementation "com.google.code.gson:gson:$gsonVersion"
    // RetroFit-Gson converter
    implementation "com.squareup.retrofit2:converter-gson:$retrofitLatestVersion"

    //Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebaseVersion")
    //FirebaseRealtime
    implementation 'com.google.firebase:firebase-database-ktx'

    // TESTS
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}